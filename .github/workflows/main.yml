name: "Vprofile IAC"
on:                                
  push:
    branches:             #whenever there is apush on these branches,workflow
      - main        #will get triggered.
      - stage
    paths:  
     - terraform/**
  pull_request:                #when the pull request is opened,then workflow #triggers and also code get merged from stage to #main
    branches:               #code gets tested
      - main
    paths:
     - terraform/**

env:
 # Credentials for deployment to AWS
 AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
 AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
 # S3 bucket for the Terraform state
 BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE}}
 AWS_REGION: us-east-2
 EKS_CLUSTER: vprofile-eks

jobs:
  terraform:                           
    name: "Apply terraform code changes"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform    # cd terraform

    steps:
      - name: Checkout source code 
        uses: actions/checkout@v4

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        #with:
           #terraform_version: 1.6.3

      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"
      - name: Terraform format
        id: fmt
        run: terraform fmt -check   #this will check format correct ot not
          #so while commiting we need to fmt the code,otherwise workflow will fail.


      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false -out planfile
        continue-on-error: true

      - name: Terraform plan status
        if: steps.plan.outcome == 'failure' 
        run: exit 1      #stop execution